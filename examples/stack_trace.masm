lbl print_stack
    ; Setup Stack Frame
    enter

        ; top = RBP
        ; top + 4 = ret address
        ; RBP = RBP
        ; RBP + 4 = ret address

        mov rax RBP
        cout 1 40
        
        lbl print_stack.loop

            MOVADDR rbx rax 4
            out 1 RBX
            cout 1 44
            MOVADDR rax rax 0

        cmp rbx 0
        jne #print_stack.loop

        cout 1 41
        cout 1 10

    ; Exit stack frame
    leave
    ret

lbl add
    ; Setup Stack Frame
    enter

        MOVADDR rax rsp 8 ; get A
        MOVADDR rbx rsp 12 ; get B
        add rax RBX
        mov rdx rax ; store rax because it is overriden in print_stack

        call #print_stack

        mov rax rdx

    ; Exit stack frame
    leave
    ret

lbl main
mov rbp 0
call #rmain
hlt

lbl rmain
    ; Setup Stack Frame
    enter

        push 2 ; B
        push 1 ; A
        call #add
        out 1 $100
        out 1 RAX
        cout 1 10

    ; Exit stack frame
    leave
    ret

; data:
DB $100 "1 + 2 = "